<?xml version="1.0"?>
<project name="jprime" default="usage" basedir=".">
	<taskdef name="preprocess" classname="com.objfac.prebop.ant.PreprocessorTask" classpath="lib/preprocessor.jar" />
	<tstamp>
		<format property="year" pattern="yyyy" locale="en"/>
	</tstamp>

	<loadproperties srcFile="build.properties"/>
	<!-- =================================================================== -->
	<!-- Help on usage                                                       -->
	<!-- =================================================================== -->
	<target name="usage">
		<echo message=""/>
		<echo message=""/>
		<echo message="jprime build control"/>
		<echo message="-------------------------------------------------------------"/>
		<echo message=""/>
		<echo message=" available targets are:"/>
		<echo message=""/>
		<echo message="   all        --> builds all the jars in ./build"/>
		<echo message="   jar        --> builds the jprime.jar file in ./build"/>
		<echo message="   clean      --> restores distribution to original state"/>
		<echo message="   usage      --> (default) displays build menu"/>
		<echo message=""/>
		<echo message=" See the comments inside the build.xml file for more details."/>
		<echo message="-------------------------------------------------------------"/>
		<echo message=""/>
		<echo message=""/>
	</target>

	<!-- =================================================================== -->
	<!-- Clean - Deletes build and dist directories                          -->
	<!-- =================================================================== -->
	<target name="clean">
		<delete includeemptydirs="yes" verbose="false" failonerror="false" dir="${dist.dir}" />
		<delete includeemptydirs="yes" verbose="false" failonerror="false" dir="${build.dir}" />
	</target>

	<!-- =================================================================== -->
	<!-- Gen - generates the files in src/jprime/gen                         -->
	<!-- =================================================================== -->
	<target name="gen">
		<exec executable="make" dir="${netsim.dir}" >
			<arg value="ssfnet-jprime"/>
		</exec>
		<exec executable="make" dir="${netsim.dir}" >
			<arg value="metis"/>
		</exec>
	</target>

	<!-- =================================================================== -->
	<!-- Prepare - Creates build folders and copies the contents of lib      -->
	<!-- =================================================================== -->
	<target name="prepare" depends="gen" >
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${build.lib}"/>
		<mkdir dir="${build.src}"/>
		<mkdir dir="${build.dest}"/>
	</target>

	<!-- =================================================================== -->
	<!-- Prepares the source code                                            -->
	<!-- =================================================================== -->
	<target name="prepare-jar" depends="prepare">
		<!-- preprocessing the files -->
		<preprocess indir="${src.dir}" outdir="${src.dir}" out="merge">
			<var name="DEBUG" value="${DEBUG}"/>
			<var name="TEST_TP" value="${TEST_TP}"/>
			<var name="SEPARATE_PROP_TABLE" value="${SEPARATE_PROP_TABLE}"/>
			<var name="UPDATE_CIDS_SEPARATE" value="${UPDATE_CIDS_SEPARATE}"/>
			<var name="USE_FLAT_FILE_DB" value="${USE_FLAT_FILE_DB}"/>
			<filetype commentend="*/" commentbegin="/*" extensions="java"/>
		</preprocess>
		<mkdir dir="${build.lib}"/>
		<copy todir="${build.lib}">
			<fileset dir="${lib.dir}"/>
		</copy>
		<copy todir="${build.src}">
			<fileset dir="${src.dir}"/>
		</copy>
	</target>

	<!-- =================================================================== -->
	<!-- Compiles the source code                                            -->
	<!-- =================================================================== -->
	<target name="compile-jar" depends="prepare-jar">
		<!-- copy resource files -->
		<copy todir="${build.dest}">
			<fileset dir="${build.src}" excludes="**/*.java"/>
		</copy>
		<javac srcdir="${build.src}/prefuse"
	     destdir="${build.dest}"
	     classpath="${lucene.lib}"
	     debug="${debug}"
	     debugLevel="${debugLevel}"
	     deprecation="${deprecation}"
	     optimize="${optimize}"
	     includeantruntime="false"/>
		<javac srcdir="${build.src}/jprime"
	     destdir="${build.dest}"
	     classpath="${class-path}:${build.dest}/meta:${build.dest}/prefuse:${build.dest}/monitor"
	     debug="${debug}"
	     debugLevel="${debugLevel}"
	     deprecation="${deprecation}"
	     optimize="${optimize}"
	     includeantruntime="false"/>
		<javac srcdir="${build.src}/monitor"
	     destdir="${build.dest}"
	     classpath="${class-path}:${build.dest}/meta:${build.dest}/jprime"
	     debug="${debug}"
	     debugLevel="${debugLevel}"
	     deprecation="${deprecation}"
	     optimize="${optimize}"
	     includeantruntime="false"/>
	</target>

	<!-- =================================================================== -->
	<!-- Creates the prime.jar in ./dist -->
	<!-- =================================================================== -->
	<target name="jar" depends="compile-jar">
		<mkdir dir="${dist.dir}" />
		<copy todir="${dist.lib}">
			<fileset dir="${build.lib}"/>
			<fileset file="${metis.lib}"/>
		</copy>
		<mkdir dir="${build.dest}/jnilib" />
		<copy todir="${build.dest}/jnilib">
			<fileset file="${metis.lib}"/>
		</copy>
		<jar jarfile="${dist.dir}/${name}.jar">
			<fileset dir="${build.dest}" />
			<manifest>
				<attribute name="Main-Class" value="${main-class}"/>
				<attribute name="Class-Path" value="${class-path-manifest}"/>
				<attribute name="Eclipse-BuddyPolicy" value="required"/>
			</manifest>
		</jar>
		<jar jarfile="${dist.dir}/${name}.src.jar" basedir="${build.src}" />
	</target>

	<!-- =================================================================== -->
	<!-- Build all jars in ./build                                           -->
	<!-- =================================================================== -->
	<target name="all" depends="jar"/>

	<!-- =================================================================== -->
	<!-- Build source distribution in ./dist                                 -->
	<!-- =================================================================== -->
	<target name="sourcedist" depends="clean">
		<mkdir dir="${dist.dir}"/>
		<mkdir dir="${sourcedist.dir}"/>

		<copy todir="${sourcedist.dir}">
			<fileset dir="${root.dir}" excludes="**/.*" />
		</copy>
		<copy todir="${sourcedist.dir}">
			<fileset dir="${root.dir}" casesensitive="yes">
				<include name=".project"/>
				<include name=".classpath"/>
			</fileset>
		</copy>

		<!-- Now delete what we dont want, probably a better way to do this -->
		<delete dir="${sourcedist.dir}/dist"/>
		<delete dir="${sourcedist.dir}/classes"/>
		<delete dir="${sourcedist.dir}/build"/>
		<delete dir="${sourcedist.dir}/.settings"/>

		<fixcrlf srcdir="${sourcedist.dir}"
	       eol="lf" eof="remove"
	       tablength="4" tab="remove"
	       includes="**/*.sh"
	       />
		<zip zipfile="${dist.dir}/${name}-${version}-${DSTAMP}.zip"
	   basedir="${dist.dir}"
	   whenempty="create"
	   />
	</target>

	<!-- =================================================================== -->
	<!-- Build compiled distribution in ./dist                               -->
	<!-- =================================================================== -->
	<target name="compiledist" depends="clean, all">
		<mkdir dir="${dist.dir}"/>
		<mkdir dir="${compiledist.dir}"/>

		<copy todir="${compiledist.dir}">
			<fileset dir="${root.dir}"/>
		</copy>

		<!-- Now delete what we dont want, probably a better way to do this -->
		<delete dir="${compiledist.dir}/dist"/>
		<delete dir="${sourcedist.dir}/classes"/>
		<delete dir="${compiledist.dir}/build"/>
		<delete dir="${sourcedist.dir}/.settings"/>

		<fixcrlf srcdir="${compiledist.dir}"
	       eol="lf" eof="remove"
	       includes="**/*.sh"
	       />

		<zip zipfile="${dist.dir}/${name}-${version}-${DSTAMP}-bin.zip"
	   basedir="${dist.dir}/${name}-${version}"
	   whenempty="create"
	   />

	</target>

	<!-- =================================================================== -->
	<!-- testing                                                             -->
	<!-- =================================================================== -->
	<target name="test">
		<echo message="Running All Tests"/>
		<exec executable="make">
			<arg value="-C"/>
			<arg path="test"/>
			<arg value="all"/>
		</exec>
	</target>
	<target name="test-clean">
		<echo message="Cleaning Tests"/>
		<exec executable="make">
			<arg value="-C"/>
			<arg path="test"/>
			<arg value="clean"/>
		</exec>
	</target>
</project>
